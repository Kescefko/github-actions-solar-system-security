
name: Solar System Workflow
# testing

on: 
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: 'superuser'
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

  # GCP
  PROJECT_ID: stone-column-459311-v2
  PROJECT_NUMBER: 48311044267
  CLUSTER: clouddemo-linux
  CLUSTER_ZONE: us-central1-a
  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1
    
jobs:
    unit-testing:
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
          MONGO_URI: 'mongodb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    docker:
      name: Containerization
      needs: [unit-testing]
      permissions:
        packages: write
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
  
        - name: Dockerhub Login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
        - name: GHCR Login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Docker Build For Testing
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
  
            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP
  
            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live

        - name: Set image name
          run: |
            IMAGE_NAME="ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/solar-system:${{ github.sha }}"
            echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

        - name: Container Registry Push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: |
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              ${{ env.IMAGE_NAME }}
  